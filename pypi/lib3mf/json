{
  "info": {
    "author": null,
    "author_email": null,
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# lib3mf\n\n[![Build Status]](https://github.com/3MFConsortium/lib3mf/workflows/Build/badge.svg?branch=release%2F2.4.1)\n[![Documentation Status](https://readthedocs.org/projects/lib3mf/badge/?version=master)](https://readthedocs.org/projects/lib3mf)\n[![Version 2.4.1](https://img.shields.io/static/v1.svg?label=lib3mf&message=v2.4.1&color=green)]()\n[![Supported platforms](https://img.shields.io/static/v1.svg?label=platform&message=windows%20%7C%20macos%20%7C%20linux&color=lightgrey)]()\n[![Simplified BSD License](https://img.shields.io/static/v1.svg?label=license&message=BSD&color=green)](LICENSE)\n[![codecov](https://codecov.io/gh/3MFConsortium/lib3mf/branch/develop/graph/badge.svg?token=3ARnBye33c)](https://codecov.io/gh/3MFConsortium/lib3mf)\n\nlib3mf is a C++ implementation of the 3D Manufacturing Format file standard.\n\nIt provides 3MF reading and writing capabilities, as well as conversion and validation tools for input and output data.\nlib3mf runs on Windows, Linux and MacOS and offers a clean and easy-to-use API in\n[various programming languages](https://lib3mf.readthedocs.io/en/latest/#api-documentation)\nto speed up the development and keep integration costs at a minimum.\n\nAs 3MF shall become an universal 3D Printing standard, its quick adoption is very important. \nThis library shall lower all barriers of adoption to any possible user, let it be software \nproviders, hardware providers, service providers or middleware tools.\n\nThe specification can be downloaded at\n[http://3mf.io/specification/](http://3mf.io/specification/).\n\n\n\n\n## Example (Create Cube)\n\n```python\nimport lib3mf\nfrom lib3mf import get_wrapper\n\n# Get version\ndef get_version(wrapper):\n    major, minor, micro = wrapper.GetLibraryVersion()\n    print(\"Lib3MF version: {:d}.{:d}.{:d}\".format(major, minor, micro), end=\"\")\n    hasInfo, prereleaseinfo = wrapper.GetPrereleaseInformation()\n    if hasInfo:\n        print(\"-\" + prereleaseinfo, end=\"\")\n    hasInfo, buildinfo = wrapper.GetBuildInformation()\n    if hasInfo:\n        print(\"+\" + buildinfo, end=\"\")\n    print(\"\")\n\n\n# Create vertex in a mesh\ndef create_vertex(_mesh, x, y, z):\n    position = lib3mf.Position()\n    position.Coordinates[0] = float(x)\n    position.Coordinates[1] = float(y)\n    position.Coordinates[2] = float(z)\n    _mesh.AddVertex(position)\n    return position\n\n\n# Add triangle in a mesh\ndef add_triangle(_mesh, p1, p2, p3):\n    triangle = lib3mf.Triangle()\n    triangle.Indices[0] = p1\n    triangle.Indices[1] = p2\n    triangle.Indices[2] = p3\n    _mesh.AddTriangle(triangle)\n    return triangle\n\n\n# Get a wrapper object\nwrapper = get_wrapper()\n\n# Check version always\nget_version(wrapper)\n\n# Create a model\nmodel = wrapper.CreateModel()\nmesh_object = model.AddMeshObject()\nmesh_object.SetName(\"Box\")\n\n# Define the size of the cube\nfSizeX, fSizeY, fSizeZ = 100.0, 200.0, 300.0\n\n# Create vertices\nvertices = [\n    create_vertex(mesh_object, 0, 0, 0),\n    create_vertex(mesh_object, fSizeX, 0, 0),\n    create_vertex(mesh_object, fSizeX, fSizeY, 0),\n    create_vertex(mesh_object, 0, fSizeY, 0),\n    create_vertex(mesh_object, 0, 0, fSizeZ),\n    create_vertex(mesh_object, fSizeX, 0, fSizeZ),\n    create_vertex(mesh_object, fSizeX, fSizeY, fSizeZ),\n    create_vertex(mesh_object, 0, fSizeY, fSizeZ)\n]\n\n# Define triangles by vertices indices\ntriangle_indices = [\n    (2, 1, 0), (0, 3, 2), (4, 5, 6), (6, 7, 4),\n    (0, 1, 5), (5, 4, 0), (2, 3, 7), (7, 6, 2),\n    (1, 2, 6), (6, 5, 1), (3, 0, 4), (4, 7, 3)\n]\n\n# Create triangles\ntriangles = []\nfor v0, v1, v2 in triangle_indices:\n    triangles.append(add_triangle(mesh_object, v0, v1, v2))\n\n# Set geometry to the mesh object after creating vertices and triangles\nmesh_object.SetGeometry(vertices, triangles)\n\n# Add build item with an identity transform\nmodel.AddBuildItem(mesh_object, wrapper.GetIdentityTransform())\n\n# Save the model to a 3MF file\nwriter = model.QueryWriter(\"3mf\")\nwriter.WriteToFile(\"cube.3mf\")\n```\n\n## Documentation\nlib3mf's documentation is available on https://lib3mf.readthedocs.io.\n\n## Obtaining lib3mf\nSimply download the precompiled binary SDK https://github.com/3MFConsortium/lib3mf/releases.\n\n## Using lib3mf\nAllthough the different language bindings are kept as similar as possible,\nthe usage of lib3mf still depends your programming language.\n\nYou are best-off starting with one of the examples distributed in the [SDK](https://github.com/3MFConsortium/lib3mf/releases) or with this [minimal example in C++](SDK/Examples/CppDynamic/Source/ExtractInfo.cpp).\n\n## Contributing\nlib3mf is an open source project and supported by the [3MF Consortium](https://3mf.io/).\n\nContributions are welcome and we are always looking for people that improve the implementation of the specification and extensions of 3MF. Have a look at the [contributor's guide](CONTRIBUTING.md) for details.\nThis page also contains a section about building lib3mf from source or obtaining nightly snapshot builds.\n\n## Licenses and third party code\nlib3mf is released under the [BSD license](LICENSE). The library contains code of the following [third parties](SDK/Credits.txt):\n1. libzip 1.10.1, https://libzip.org/license/\n2. zlib 1.3.1, http://www.zlib.net/zlib_license.html\n3. cpp-base64 2.rc.08, https://github.com/ReneNyffenegger/cpp-base64/blob/master/LICENSE\n4. fast-float v6.0.0, https://github.com/fastfloat/fast_float/tree/v6.0.0?tab=License-3-ov-file\n\nIn addition, the automated tests of lib3mf make uses of LibReSSL 3.8.2, [License](https://github.com/libressl/openbsd/blob/master/src/lib/libssl/LICENSE) and googletest 1.14.0 [License](https://github.com/google/googletest/blob/main/LICENSE). \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "dynamic": null,
    "home_page": null,
    "keywords": null,
    "license": null,
    "license_expression": null,
    "license_files": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "lib3mf",
    "package_url": "https://pypi.org/project/lib3mf/",
    "platform": null,
    "project_url": "https://pypi.org/project/lib3mf/",
    "project_urls": null,
    "provides_extra": null,
    "release_url": "https://pypi.org/project/lib3mf/2.4.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "lib3mf is an implementation of the 3D Manufacturing Format file standard",
    "version": "2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 27675459,
  "releases": {
    "2.4.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "59be81eec04e2b40abf77de44dbd2c626b92368f547af3057082d8fea848326e",
          "md5": "bea487406cdaff094afb92bf1080c6a8",
          "sha256": "d7e54deef4746aa4ebc27ef8b367e173d46e0e8b46cf2bb930bbd615a222a07e"
        },
        "downloads": -1,
        "filename": "lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
        "has_sig": false,
        "md5_digest": "bea487406cdaff094afb92bf1080c6a8",
        "packagetype": "bdist_wheel",
        "python_version": "cp312",
        "requires_python": null,
        "size": 581220,
        "upload_time": "2025-06-19T17:59:32+00:00",
        "upload_time_iso_8601": "2025-06-19T17:59:32.694788+00:00Z",
        "url": "https://yeicor.github.io/OCP.wasm/packages/lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "59be81eec04e2b40abf77de44dbd2c626b92368f547af3057082d8fea848326e",
          "md5": "bea487406cdaff094afb92bf1080c6a8",
          "sha256": "d7e54deef4746aa4ebc27ef8b367e173d46e0e8b46cf2bb930bbd615a222a07e"
        },
        "downloads": -1,
        "filename": "lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
        "has_sig": false,
        "md5_digest": "bea487406cdaff094afb92bf1080c6a8",
        "packagetype": "bdist_wheel",
        "python_version": "cp312",
        "requires_python": null,
        "size": 581220,
        "upload_time": "2025-06-19T17:59:32+00:00",
        "upload_time_iso_8601": "2025-06-19T17:59:32.694788+00:00Z",
        "url": "https://yeicor.github.io/OCP.wasm/packages/lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "59be81eec04e2b40abf77de44dbd2c626b92368f547af3057082d8fea848326e",
        "md5": "bea487406cdaff094afb92bf1080c6a8",
        "sha256": "d7e54deef4746aa4ebc27ef8b367e173d46e0e8b46cf2bb930bbd615a222a07e"
      },
      "downloads": -1,
      "filename": "lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
      "has_sig": false,
      "md5_digest": "bea487406cdaff094afb92bf1080c6a8",
      "packagetype": "bdist_wheel",
      "python_version": "cp312",
      "requires_python": null,
      "size": 581220,
      "upload_time": "2025-06-19T17:59:32+00:00",
      "upload_time_iso_8601": "2025-06-19T17:59:32.694788+00:00Z",
      "url": "https://yeicor.github.io/OCP.wasm/packages/lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "59be81eec04e2b40abf77de44dbd2c626b92368f547af3057082d8fea848326e",
        "md5": "bea487406cdaff094afb92bf1080c6a8",
        "sha256": "d7e54deef4746aa4ebc27ef8b367e173d46e0e8b46cf2bb930bbd615a222a07e"
      },
      "downloads": -1,
      "filename": "lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
      "has_sig": false,
      "md5_digest": "bea487406cdaff094afb92bf1080c6a8",
      "packagetype": "bdist_wheel",
      "python_version": "cp312",
      "requires_python": null,
      "size": 581220,
      "upload_time": "2025-06-19T17:59:32+00:00",
      "upload_time_iso_8601": "2025-06-19T17:59:32.694788+00:00Z",
      "url": "https://yeicor.github.io/OCP.wasm/packages/lib3mf-2.4.1-cp312-cp312-pyodide_2024_0_wasm32.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}